name: CI Pipeline for Spring Boot WAR with Tomcat

on:
  push:
    branches: [ branch1 ]

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  

      - name: Cache Maven dependencies
        uses: actions/cache@v4
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-

      - name: Set up JDK 21
        uses: actions/setup-java@v3
        with:
          java-version: '21'
          distribution: 'temurin'

      - name: Run Tests
        run: mvn test

      # Модифицированный шаг сборки с компиляцией
      - name: Build and prepare for SonarQube
        run: |
          mvn -B clean compile
          mvn -B package -DskipTests

      # Обновленный шаг анализа SonarQube
      - name: SonarQube Analysis
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_HOST_URL: https://sonarcloud.io
        run: |
          mvn -B sonar:sonar \
            -Dsonar.projectKey=juliakaiko_userservice \
            -Dsonar.projectName=UserService \
            -Dsonar.host.url=$SONAR_HOST_URL \
            -Dsonar.organization=juliakaiko \
            -Dsonar.java.binaries=target/classes \
            -Dsonar.java.libraries=target/*.jar

      - name: SonarQube Quality Gate Check
        uses: sonarsource/sonarqube-quality-gate-action@master
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and Push Docker Image
        if: success()
        run: |
          docker build -t juliakaiko94/user-service:latest .
          docker push juliakaiko94/user-service:latest