name: CI Pipeline for Spring Boot WAR with Tomcat

on:
  push:
    branches: [ branch1 ]  # Активировать pipeline при push в ветку 'branch1'

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest  # Использовать последнюю версию Ubuntu

    steps:
      # Получить код из репозитория
      - name: Checkout code
        uses: actions/checkout@v4

      # Кэширование зависимостей Maven
      - name: Cache Maven dependencies
        uses: actions/cache@v4
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-

      # Установить JDK 21
      - name: Set up JDK 21
        uses: actions/setup-java@v3
        with:
          java-version: '21'
          distribution: 'temurin'

      # Запуск тестов
      - name: Run Tests
        run: mvn test

      # Сборка проекта с Maven (создание WAR-файла)
      - name: Build with Maven
        run: mvn clean package -DskipTests  # Пропускаем тесты, так как они уже выполнены

      # Анализ кода в SonarQube
      - name: SonarQube Analysis
        uses: sonarsource/sonarqube-scan-action@master
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_HOST_URL: https://sonarcloud.io
        with:
          args: >
            -Dsonar.projectKey=userservice
            -Dsonar.projectName=UserService
            -Dsonar.host.url=${{ env.SONAR_HOST_URL }}
            -DskipTests
            -Dsonar.organization=juliakaiko
            

      # Проверка SonarQube Quality Gate
      - name: SonarQube Quality Gate Check
        uses: sonarsource/sonarqube-quality-gate-action@master
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        with:
          scan: true

      # Логин в Docker Hub
      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      # Сборка и публикация Docker-образа
      - name: Build and Push Docker Image
        if: success()
        run: |
          docker build -t juliakaiko94/user-service:latest .
          docker push juliakaiko94/user-service:latest